<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="seience.havelook.dao.ArticleMapper">
	<resultMap id="BaseResultMap" type="seience.havelook.pojo.Article">
		<id column="article_id" jdbcType="INTEGER" property="article_id" />
		<result column="article_name" jdbcType="VARCHAR" property="article_name" />
		<result column="user_id" jdbcType="INTEGER" property="user_id" />
		<result column="publish_time" jdbcType="VARCHAR" property="publish_time" />
		<result column="modify_time" jdbcType="VARCHAR" property="modify_time" />
		<result column="category_id" jdbcType="INTEGER" property="category_id" />
		<result column="article_keyword" jdbcType="VARCHAR" property="article_keyword" />
		<result column="article_img" jdbcType="VARCHAR" property="article_img" />
		<result column="article_thumb" jdbcType="VARCHAR" property="article_thumb" />
		<result column="is_top" jdbcType="INTEGER" property="is_top" />
		<result column="article_view" jdbcType="INTEGER" property="article_view" />
		<result column="article_love" jdbcType="INTEGER" property="article_love" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="seience.havelook.pojo.ArticleWithBLOBs">
		<result column="article_desc" jdbcType="LONGVARCHAR" property="article_desc" />
		<result column="article_content" jdbcType="LONGVARCHAR"
			property="article_content" />
	</resultMap>
	<resultMap type="seience.havelook.pojo.Article" id="ArticleWithCategoryAndUserinfoMap">
		<id column="article_id" jdbcType="INTEGER" property="article_id" />
		<result column="article_name" jdbcType="VARCHAR" property="article_name" />
		<result column="user_id" jdbcType="INTEGER" property="user_id" />
		<result column="publish_time" jdbcType="VARCHAR" property="publish_time" />
		<result column="modify_time" jdbcType="VARCHAR" property="modify_time" />
		<result column="category_id" jdbcType="INTEGER" property="category_id" />
		<result column="article_keyword" jdbcType="VARCHAR" property="article_keyword" />
		<result column="article_img" jdbcType="VARCHAR" property="article_img" />
		<result column="article_thumb" jdbcType="VARCHAR" property="article_thumb" />
		<result column="is_top" jdbcType="INTEGER" property="is_top" />
		<result column="article_view" jdbcType="INTEGER" property="article_view" />
		<result column="article_love" jdbcType="INTEGER" property="article_love" />
		<!-- 一对一 -->
		<association property="category" javaType="seience.havelook.pojo.Category">
			<id column="category_id" property="category_id" />
			<result column="category_name" property="category_name" />
		</association>

		<association property="userinfo" javaType="seience.havelook.pojo.Userinfo">
			<id column="user_id" jdbcType="INTEGER" property="user_id" />
			<result column="username" jdbcType="VARCHAR" property="username" />
			<result column="password" jdbcType="CHAR" property="password" />
			<result column="user_email" jdbcType="VARCHAR" property="user_email" />
			<result column="timestamp" jdbcType="VARCHAR" property="timestamp" />
			<result column="userlastip" jdbcType="VARCHAR" property="userlastip" />
		</association>

	</resultMap>

	<resultMap extends="ArticleWithCategoryAndUserinfoMap"
		id="ArticleWithCategoryAndUserinfoAndBLOBsMap" type="seience.havelook.pojo.ArticleWithBLOBs">
		<result column="article_desc" jdbcType="LONGVARCHAR" property="article_desc" />
		<result column="article_content" jdbcType="LONGVARCHAR"
			property="article_content" />
	</resultMap>
	<sql id="Base_Column_List">
		article_id, article_name, user_id, publish_time,
		modify_time, category_id,
		article_keyword,
		article_img, article_thumb,
		is_top, article_view, article_love
	</sql>
	<sql id="Blob_Column_List">
		article_desc, article_content
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ArticleWithCategoryAndUserinfoAndBLOBsMap">
		select
		a.user_id,
		a.article_id,
		a.article_name,
		a.article_content,
		c.category_id,
		c.category_name
		FROM article a LEFT
		JOIN category c ON
		a.category_id = c.category_id
		WHERE a.article_id =
		#{article_id,jdbcType=INTEGER}
	</select>
	<!-- ArticleWithBLOBs selectByPrimaryKeyWithCategoryAndUserinfo(Integer 
		article_id); -->
	<select id="selectByPrimaryKeyWithCategoryAndUserinfo"
		parameterType="java.lang.Integer" resultMap="ArticleWithCategoryAndUserinfoAndBLOBsMap">
		select
		a.article_thumb,
		a.article_id,
		a.article_name,
		a.publish_time,
		a.modify_time,
		a.article_view,
		a.article_love,
		a.article_content,
		u.username,
		c.category_id,
		c.category_name
		FROM article a LEFT JOIN category c ON
		a.category_id = c.category_id
		LEFT JOIN userinfo u ON a.user_id =
		u.user_id
		WHERE a.article_id = #{article_id,jdbcType=INTEGER}
	</select>
	<select id="selectByExampleWithCategoryAndUserinfo" resultMap="ArticleWithCategoryAndUserinfoMap">
		SELECT
		a.article_thumb,
		a.article_id,
		a.article_name,
		u.username,
		c.category_id,
		c.category_name,
		a.publish_time,
		a.modify_time,
		a.article_view,
		a.article_love
		FROM article a LEFT JOIN category c ON
		a.category_id = c.category_id
		LEFT JOIN userinfo u ON a.user_id =
		u.user_id
		ORDER BY a.article_id DESC
	</select>
	<!-- List<Article> selectByExampleWithCategoryAndUserinfoByCategoryId(Integer 
		category_id); -->
	<select id="selectByExampleWithCategoryAndUserinfoByCategoryId"
		resultMap="ArticleWithCategoryAndUserinfoMap">
		SELECT
		a.article_thumb,
		a.article_id,
		a.article_name,
		u.username,
		c.category_id,
		c.category_name,
		a.publish_time,
		a.modify_time,
		a.article_view,
		a.article_love
		FROM article a LEFT JOIN
		category c ON
		a.category_id = c.category_id
		LEFT JOIN userinfo u ON
		a.user_id =
		u.user_id
		WHERE a.category_id =
		#{category_id,jdbcType=INTEGER}
	</select>
	<!-- List<Article> selectRecentNewsOrderByDescWithLimit(Integer articleLimit); -->
	<select id="selectRecentNewsOrderByDescWithLimit" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		SELECT
		a.article_id,
		a.article_name,
		a.publish_time
		FROM article a ORDER BY a.article_id DESC LIMIT
		#{articleLimit,jdbcType=INTEGER}
	</select>

	<!-- int deleteByCategory_id(Integer category_id); -->
	<delete id="deleteByCategory_id" parameterType="java.lang.Integer">
		delete from
		article
		where category_id = #{category_id,jdbcType=INTEGER}
	</delete>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		article
		where article_id = #{article_id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="seience.havelook.pojo.ArticleWithBLOBs">
		insert into article
		(article_id, article_name, user_id,
		publish_time, modify_time,
		category_id,
		article_keyword, article_img, article_thumb,
		is_top,
		article_view, article_love,
		article_desc, article_content)
		values
		(#{article_id,jdbcType=INTEGER}, #{article_name,jdbcType=VARCHAR},
		#{user_id,jdbcType=INTEGER},
		#{publish_time,jdbcType=VARCHAR},
		#{modify_time,jdbcType=VARCHAR}, #{category_id,jdbcType=INTEGER},
		#{article_keyword,jdbcType=VARCHAR}, #{article_img,jdbcType=VARCHAR},
		#{article_thumb,jdbcType=VARCHAR},
		#{is_top,jdbcType=INTEGER},
		#{article_view,jdbcType=INTEGER}, #{article_love,jdbcType=INTEGER},
		#{article_desc,jdbcType=LONGVARCHAR},
		#{article_content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="seience.havelook.pojo.ArticleWithBLOBs">
		insert into article
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="article_id != null">
				article_id,
			</if>
			<if test="article_name != null">
				article_name,
			</if>
			<if test="user_id != null">
				user_id,
			</if>
			<if test="publish_time != null">
				publish_time,
			</if>
			<if test="modify_time != null">
				modify_time,
			</if>
			<if test="category_id != null">
				category_id,
			</if>
			<if test="article_keyword != null">
				article_keyword,
			</if>
			<if test="article_img != null">
				article_img,
			</if>
			<if test="article_thumb != null">
				article_thumb,
			</if>
			<if test="is_top != null">
				is_top,
			</if>
			<if test="article_view != null">
				article_view,
			</if>
			<if test="article_love != null">
				article_love,
			</if>
			<if test="article_desc != null">
				article_desc,
			</if>
			<if test="article_content != null">
				article_content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="article_id != null">
				#{article_id,jdbcType=INTEGER},
			</if>
			<if test="article_name != null">
				#{article_name,jdbcType=VARCHAR},
			</if>
			<if test="user_id != null">
				#{user_id,jdbcType=INTEGER},
			</if>
			<if test="publish_time != null">
				#{publish_time,jdbcType=VARCHAR},
			</if>
			<if test="modify_time != null">
				#{modify_time,jdbcType=VARCHAR},
			</if>
			<if test="category_id != null">
				#{category_id,jdbcType=INTEGER},
			</if>
			<if test="article_keyword != null">
				#{article_keyword,jdbcType=VARCHAR},
			</if>
			<if test="article_img != null">
				#{article_img,jdbcType=VARCHAR},
			</if>
			<if test="article_thumb != null">
				#{article_thumb,jdbcType=VARCHAR},
			</if>
			<if test="is_top != null">
				#{is_top,jdbcType=INTEGER},
			</if>
			<if test="article_view != null">
				#{article_view,jdbcType=INTEGER},
			</if>
			<if test="article_love != null">
				#{article_love,jdbcType=INTEGER},
			</if>
			<if test="article_desc != null">
				#{article_desc,jdbcType=LONGVARCHAR},
			</if>
			<if test="article_content != null">
				#{article_content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="seience.havelook.pojo.ArticleWithBLOBs">
		update article
		<set>
			<if test="article_name != null">
				article_name = #{article_name,jdbcType=VARCHAR},
			</if>
			<if test="user_id != null">
				user_id = #{user_id,jdbcType=INTEGER},
			</if>
			<if test="publish_time != null">
				publish_time = #{publish_time,jdbcType=VARCHAR},
			</if>
			<if test="modify_time != null">
				modify_time = #{modify_time,jdbcType=VARCHAR},
			</if>
			<if test="category_id != null">
				category_id = #{category_id,jdbcType=INTEGER},
			</if>
			<if test="article_keyword != null">
				article_keyword = #{article_keyword,jdbcType=VARCHAR},
			</if>
			<if test="article_img != null">
				article_img = #{article_img,jdbcType=VARCHAR},
			</if>
			<if test="article_thumb != null">
				article_thumb = #{article_thumb,jdbcType=VARCHAR},
			</if>
			<if test="is_top != null">
				is_top = #{is_top,jdbcType=INTEGER},
			</if>
			<if test="article_view != null">
				article_view = #{article_view,jdbcType=INTEGER},
			</if>
			<if test="article_love != null">
				article_love = #{article_love,jdbcType=INTEGER},
			</if>
			<if test="article_desc != null">
				article_desc = #{article_desc,jdbcType=LONGVARCHAR},
			</if>
			<if test="article_content != null">
				article_content =
				#{article_content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where article_id = #{article_id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="seience.havelook.pojo.ArticleWithBLOBs">
		update
		article
		set article_name = #{article_name,jdbcType=VARCHAR},
		user_id =
		#{user_id,jdbcType=INTEGER},
		publish_time =
		#{publish_time,jdbcType=VARCHAR},
		modify_time =
		#{modify_time,jdbcType=VARCHAR},
		category_id =
		#{category_id,jdbcType=INTEGER},
		article_keyword =
		#{article_keyword,jdbcType=VARCHAR},
		article_img =
		#{article_img,jdbcType=VARCHAR},
		article_thumb =
		#{article_thumb,jdbcType=VARCHAR},
		is_top = #{is_top,jdbcType=INTEGER},
		article_view = #{article_view,jdbcType=INTEGER},
		article_love =
		#{article_love,jdbcType=INTEGER},
		article_desc =
		#{article_desc,jdbcType=LONGVARCHAR},
		article_content =
		#{article_content,jdbcType=LONGVARCHAR}
		where article_id =
		#{article_id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="seience.havelook.pojo.Article">
		update article
		set
		article_name = #{article_name,jdbcType=VARCHAR},
		user_id =
		#{user_id,jdbcType=INTEGER},
		publish_time =
		#{publish_time,jdbcType=VARCHAR},
		modify_time =
		#{modify_time,jdbcType=VARCHAR},
		category_id =
		#{category_id,jdbcType=INTEGER},
		article_keyword =
		#{article_keyword,jdbcType=VARCHAR},
		article_img =
		#{article_img,jdbcType=VARCHAR},
		article_thumb =
		#{article_thumb,jdbcType=VARCHAR},
		is_top = #{is_top,jdbcType=INTEGER},
		article_view = #{article_view,jdbcType=INTEGER},
		article_love =
		#{article_love,jdbcType=INTEGER}
		where article_id =
		#{article_id,jdbcType=INTEGER}
	</update>
</mapper>